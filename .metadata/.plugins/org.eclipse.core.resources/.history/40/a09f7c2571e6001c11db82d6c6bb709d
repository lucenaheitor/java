package chess.pieces;

import boardgame.Board;
import boardgame.Position;
import chess.ChessPiece;
import chess.Color;

public class King extends ChessPiece {

	public King(Board board, Color color) {
		super(board, color);
		
	}

	@Override
	public String toString() {
		return "K";
	}
	// Func. aux. Pra saber se o rei pode se mover
	private boolean canMove(Position position) {
		ChessPiece p = (ChessPiece)getBoard().piece(position);
		return p == null || p.getColor() != getColor();
	}

	@Override
	public boolean[][] possibleMoves() {
		boolean [][] mat = new boolean[getBoard().getRows()][getBoard().getColumns()];
		
		Position p =  new Position(0, 0);
		
		  //Above
		p.setValues(position.getColumn() - 1, position.getColumn());
		if(getBoard().positionExists(p) && canMove(p)){
			mat[p.getRow()][p.getColumn()] = true;
			
		}
		
		  //below
				p.setValues(position.getColumn() + 1, position.getColumn());
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;
					
		}
		   //left
				
				p.setValues(position.getColumn(), position.getColumn() - 1);
				if(getBoard().positionExists(p) && canMove(p)){	
					mat[p.getRow()][p.getColumn()] = true;
					
		}
	       //right
				
				p.setValues(position.getColumn(), position.getColumn() + 1);
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;			
		
		}	
				
           //NW
				
				p.setValues(position.getColumn() - 1, position.getColumn() - 1);
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;			
		
		}	
           //NE
				
				p.setValues(position.getColumn() - 1, position.getColumn() + 1);
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;
	
		}
          //SW
				
				p.setValues(position.getColumn() + 1, position.getColumn() - 1);
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;
	
		}	
          //SE
				
				p.setValues(position.getColumn() + 1, position.getColumn() + 1);
				if(getBoard().positionExists(p) && canMove(p)){
					mat[p.getRow()][p.getColumn()] = true;
		}	
				
				
		
		
		return mat;
	}
}
